#!/bin/sh

TWOFASITE=$1
if [ -z "$TWOFA_BASE" ]; then
    BASE="$HOME/.config/2fa"
else
    BASE="$TWOFA_BASE"
fi

if [ -z "$TWOFASITE" ] || [ "$TWOFASITE" = "help" ]; then
    echo "usage: 2fa site|list"
    echo ""
    echo "A TWOFA site is needed."
    echo ""
    echo "usage: 2fa <site>"
    echo "	generate the 2 Factor for the site"
    echo ""
    echo "usage: 2fa list"
    echo "	list the sites known"
    echo ""
    echo "usage: 2fa create <sitename> [siteoptions]"
    echo "	create a new site"
    echo "	default siteoptions are \`--totp -b\`"
    exit 1
fi

if [ "$TWOFASITE" = "create" ]; then
    NEWSITE=$2
    OPTIONS=$3
    if [ -z "$NEWSITE" ]; then
        echo "A sitename is required."
        exit 1
    fi
    if [ -z "$OPTIONS" ]; then
        OPTIONS="--totp -b"
    fi
    print "enter the site code:"
    IFS= read -r SITECODE
    echo "$SITECODE" > "$BASE"/"$NEWSITE".oath
    echo "$OPTIONS" > "$BASE"/"$NEWSITE".options
    exit 0
fi

if [ "$TWOFASITE" = "list" ]; then
    for i in "$BASE"/*.oath; do
        site=$(basename "$i" .oath)
        if [ "$site" = "*" ]; then
            continue
        else
            echo "$site"
        fi
    done
    exit 0
fi

OATH=$BASE/$TWOFASITE.oath
if [ ! -f "$OATH" ]; then
    echo "Unable to find oath key for $TWOFASITE"
    exit 1
fi

OPTS=$BASE/$TWOFASITE.options
if [ ! -f "$OPTS" ]; then
    echo "Unable to find oath options for $TWOFASITE"
    exit 1
fi

# shellcheck disable=SC2046
oathtool $(cat "$OPTS") $(cat "$OATH")
